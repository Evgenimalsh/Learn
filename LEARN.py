
# a = int (input ('введите день недели    '))
# if  (a == 1 or a == 2 or a == 3 or a == 4 or a == 5):
#     print ('будни')
# elif (a == 6 or a == 7):
#     print ('выходной')
# else:
#     print( "нет такого дня недели")
#
# Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.
# ⋀ - and
# ⋁ - or
# ¬ - not

# X = 1
# Y = 5
# Z = 7
# if (-(X + Y + Z) == -X * -Y * -Z):
#     print("true")
# else:
#     print("false")
#
#
# Напишите программу, которая принимает на вход координаты точки (X и Y), причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти плоскости, в которой находится эта точка.
# # Пример:
# # - x=34; y=-30 -> 4
# - x=2; y=4-> 1
# - x=-34; y=-30 -> 3

# X = int (input ('введите координату X    '))
# Y = int (input ('введите координату Y    '))
# if (X > 0 and Y > 0):
#     print("I")
# elif (X < 0 and Y < 0):
#      print ('III')
# elif (X > 0 and Y < 0):
#      print ('IV')
# elif (X < 0 and Y > 0):
#      print ('II')

#      AB = √(xb - xa)  2 + (yb - ya)  2
#
# Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 2D пространстве.
#
# Пример:
#
# - A (3,6); B (2,1) -> 5,09
# - A (7,-5); B (1,-1) -> 7,21


# X1 = int (input ('введите координату X1    '))
# Y1 = int (input ('введите координату Y1    '))
# X2 = int (input ('введите координату X2    '))
# Y2 = int (input ('введите координату Y2    '))
# import math
# AB = math.sqrt((X2-X1)**2 + (Y2 - Y1)**2)
# print(AB)

Домашнее задание 2


# Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр.
# Пример:0,56 -> 11

# string = input('введите вещественное число:    ').split(',')[::1]
# a = int(string[0])
# b = int(string[1])
# q = 0
# for i in range(len(str(a))):
#     n = a%10
#     q = n + q
#     a = (a - n)/10
# print(q)
# p = 0
# for i in range(len(str(b))):
#     n = b % 10
#     p = n + p
#     b = (b - n) / 10
# print(p)
# print(q+p)





# Напишите программу, которая принимает на вход число N и выдает набор произведений чисел от 1 до N.
# Пример:пусть N = 4, тогда [ 1, 2, 6, 24 ] (1, 1*2, 1*2*3, 1*2*3*4)

# import math
# N = int(input('введите число:    '))
# n = 1
# f = []
# while n <= N:
#     q = math.factorial (n)
#     n = n + 1
#     print(q)
#     f.append(q)
# print(f)



# Задайте список из n чисел последовательности (1 + 1/n)^n и выведите на экран их сумму.
# Пример:Для N=4 {1: 2, 2: 2.25, 3: 2.37, 4: 2.44} Сумма 9.06

# N = int(input('введите число:    '))
# dictionary = {}
# n = 0
# m = 1
# while n < N:
#     n = n + 1
#     m = ((1 + 1/n)**n) 
#     print(n)
#     print(m)
#     dictionary[n] = m
# print(dictionary)



# Задайте список из N элементов, заполненных числами из промежутка [-N, N].
# Найдите произведение элементов на указанных индексах. Индексы вводятся одной строкой, через пробел.
# N = 3 
# [-3, -2, -1, 0, 1, 2, 3]
# --> 0 2 3
# -3 * -1 * 0 = 0
# Вывод: 0

# N = int(input('введите число:    '))
# M = input('введите индекс:    ').split(' ')[::]
# n = []
# p = 0
# v = - N-1 
# m = 0
# while  p < N * 2 + 1:
#      p = p + 1
#      v = v + 1
#      n.append(v)
# print(n)
# i = 0
# j = []
# while i < len(M):  
#    m = n[int(M[i])]
#    i=i+1 
#    j.append(m)
# print(j)
# l = 0  
# h = j[0]
# while l < len(j)-1: 
#    l = l+1
#    h = h * j[l]
# print(h)



# Реализуйте алгоритм перемешивания списка.

# import random 
# listA = ['a', 'b', 'c', 'd', 'e']  
# random.shuffle(listA) 
# print(listA)




# Урок 3. Данные, функции и модули в Python
# Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной идексах.
# Пример:
# [2, 3, 5, 9, 3] -> на нечётных идексах элементы 3 и 9, ответ: 12

# N = input('введите числа:    ').split(' ')[::]
# n = 1
# m = 0
# p = 0
# if len(N)%2 == 0:
#    while m < len(N)/2:
#          m = m + 1
#          p = p + int(N[n])
#          n = n + 2
#    print(p)
# if (len(N)-1)/2 == 0:
#    while m < (len(N)-1)/2:
#          m = m + 1
#          p = p + int(N[n])
#          n = n + 2 
#    print(p)

 

# Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
# Пример:
# - [2, 3, 4, 5, 6] => [12, 15, 16];
# - [2, 3, 5, 6] => [12, 15]

     

# N = input('введите числа:    ').split(' ')[::]
# n = 0
# m = []
# q = []
# l = 0
# while l < len(N):
#     q.append(N[l])
#     l = l + 1
# if len(N) % 2 == 0:
#     while n < len(N) / 2:
#         p = int(q[0]) * int(q[-1])
#         n = n + 1
#         m.append(p)
#         q.pop(0)
#         q.pop(-1)
#     print(m)

# if (len(N) - 1) % 2 == 0:
#     if len(N) != 1:
#         while len(q) > 1:
#             p = int(q[0]) * int(q[-1])
#             n = n + 1
#             m.append(p)
#             q.pop(0)
#             q.pop(-1)
#     if len(q) == 1:
#         p = int(q[0]) * int(q[0])
#         m.append(p)
#     print(m)




# Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.
# Пример:
# - [1.1, 1.2, 3.1, 10.01] => 0.19

# N = input('введите вещественные числа:    ').split(' ')[::]   
# n = 0               
# q = []              

# while n < len (N):  
#       p = N[n].split('.')[::]      
#       a = float(N[n]) - float(p[0])  
#       q.append(a)                    
#       n = n + 1                       
# m = []                               
# x = 0                                
# min = float(q[0])                          
# while x < len (q):                   
#       if min > float(q[x]):          
#             min = float(q[x])         
#             m.append(min)             
#       x = x + 1                 
# y = 0                                
# max = float(q[0])                           

# while y < len (q):                   
#       if max < float(q[y]):          
#             max = float(q[y])         
#             m.append(max)
#       y = y + 1  
# print(max-min)



# Напишите программу, которая будет преобразовывать десятичное число в двоичное.
# Пример:
# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10

# n = int(input())
 
# b = ''
 
# while n > 0:
#     b = str(n % 2) + b
#     n = n // 2
 
# print(b)




# Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
# Пример:
# - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] [Негафибоначчи]


# f1 = 0
# f2 = 1
# f3 = 0
# f4 = 1

# n = int(input())

# while n > 2:
#     f1, f2 = f2, f1 + f2
#     f3, f4 = f4, f3 - f4
#     print(f1, end=' ')
#     print(f3, end=' ')
#     n -= 1

